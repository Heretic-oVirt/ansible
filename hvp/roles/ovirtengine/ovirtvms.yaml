---
# Ansible playbook for automated oVirt VMs creation
# Note: Thanks to Simone Tiraboschi for initial Ansible oVirt management hints
# TODO: find a way to extract minimum desired parameters from local Kickstart file and use those for vm creation in loop
# TODO: find a way to create a vm from scratch (including disks and nics) and make it boot once from network with Kickstart installation (on-the-fly configure PXELinux on installer machine using pre-defined MAC address)
# TODO: remove all PXELinux custom menu files (/var/lib/tftpboot/pxelinux.cfg/01-*) at the end
- name: Generate SSH key if not present
  hosts: localhost
  tasks:
    - include_tasks: ../common/tasks/createkeys.yaml
- name: Perform global oVirt operations through the Engine
  hosts: ovirtengine
  remote_user: root
  tasks:
    - include_tasks: ../common/tasks/setupkeys.yaml
    - name: Get common vars from files
      include_vars: "{{ item }}"
      with_items:
        - ../common/vars/hvp.yaml
        - ../common/vars/vms.yaml
    - name: Obtain oVirt Engine SSO token
      no_log: true
      ovirt_auth:
        url: "{{ url }}"
        username: "{{ username }}"
        password: "{{ password }}"
        ca_file: "{{ ca_file }}"
    - name: Set Management as default VMs network
      set_vars:
        vms_network: "{{ hvp_mgmt_bridge_name }}"
    - name: Set VMs network in presence of LAN dedicated connection
      set_vars:
        vms_network: "{{ hvp_lan_bridge_name }}"
      when: got_lan_network
    - name: Create all guest VMs
      include_tasks: tasks/createvm.yaml
      loop:
        - { vm_kickstart_file: "hvp-dc-c7.ks", vm_name: "domaincontroller", vm_comment: "Active Directory Domain Controller", vm_delete_protected: yes, vm_high_availability: false, vm_memory: 2GiB, vm_cpu_cores: 1, vm_cpu_sockets: 1, vm_cpu_shares: 1024, vm_type: "server", vm_operating_system: "rhel_7x64", vm_disk_size: 60GiB, vm_network: {{ vms_network }} }
        - { vm_kickstart_file: "hvp-db-c7.ks", vm_name: "database", vm_comment: "Database Server", vm_delete_protected: yes, vm_high_availability: false, vm_memory: 4GiB, vm_cpu_cores: 1, vm_cpu_sockets: 1, vm_cpu_shares: 1024, vm_type: "server", vm_operating_system: "rhel_7x64", vm_disk_size: 120GiB, vm_network: {{ vms_network }} }
        - { vm_kickstart_file: "hvp-pr-c7.ks", vm_name: "printer", vm_comment: "Print Server", vm_delete_protected: yes, vm_high_availability: false, vm_memory: 2GiB, vm_cpu_cores: 1, vm_cpu_sockets: 1, vm_cpu_shares: 1024, vm_type: "server", vm_operating_system: "rhel_7x64", vm_disk_size: 80GiB, vm_network: {{ vms_network }} }
        - { vm_kickstart_file: "hvp-vd-c7.ks", vm_name: "terminal", vm_comment: "Remote Desktop Server", vm_delete_protected: yes, vm_high_availability: false, vm_memory: 8GiB, vm_cpu_cores: 1, vm_cpu_sockets: 1, vm_cpu_shares: 1024, vm_type: "server", vm_operating_system: "rhel_7x64", vm_disk_size: 120GiB, vm_network: {{ vms_network }} }
      loop_control:
        loop_var: outer_item
        label: "{{ outer_item.vm_name }}"
        # TODO: remove or lower to 10 seconds when adding proper wait_for inside loop
        pause: 1500
    - name: Revoke the SSO token
      no_log: true
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"
...
