---
# Ansible tasks file to create a single Gluster-block LUN inside a loop (with all parameters passed as outer_item elements)
- name: Resolve names to IPs
  # TODO: hostnames are unsupported yet - converting to IPs - remove when fixed upstream
  set_fact:
    active_storage_nodes_ips: |
      {% set ip_list = [] %}
      {% for host in groups['active_storage_nodes']%}
      {% set _ = ip_list.append(lookup('dig', host, '@'+groups['ovirt_master'][0])) %}
      {% endfor %}
      {{ ip_list }}
- name: Create iSCSI LUN
  command: "gluster-block create {{ hvp_blockshare_volume_name }}/block{{ outer_item.0 }} ha {{ groups['active_storage_nodes'] | length }} auth enable {{ active_storage_nodes_ips | join(',') }} {{ outer_item.1 }}"
  register: createblock_result
- name: Save iSCSI LUN username and password
  vars:
    username_regexp: '(?is).*USERNAME:\s*([^\r\n]+).*'
    password_regexp: '(?is).*PASSWORD:\s*([^\r\n]+).*'
  blockinfile:
    path: /root/etc/lun_credentials
    state: present
    create: yes
    owner: root
    group: root
    mode: 0600
    insertafter: EOF
    marker: "# {mark} iSCSI LUN {{ outer_item.0 }} ANSIBLE MANAGED BLOCK"
    block: |
      LUN number: {{ outer_item.0 }}
      Username: {{ createblock_result.stdout | regex_replace(username_regexp, '\1') }}
      Password: {{ createblock_result.stdout | regex_replace(password_regexp, '\1') }}
...
