---
# Ansible playbook to join the Gluster-based Samba clustered fileserver to the internal oVirt-hosted AD domain
- name: Generate SSH key if not present
  hosts: localhost
  tasks:
    - include_tasks: ../common/tasks/createkeys.yaml
    - name: Get common vars
      include_vars:
        file: "../common/vars/hvp.yaml"
- name: Perform Samba AD configuration
  hosts: glusternodes
  remote_user: root
  tasks:
    - include_tasks: ../common/tasks/setupkeys.yaml
    - name: Get common vars
      include_vars:
        file: "../common/vars/hvp.yaml"
    - name: Prepare Samba domain-based user-mapping configuration file
      template:
        src: templates/smbusers-domain.j2
        dest: /etc/samba/smbusers
        owner: root
        group: root
        mode: 0644
    - name: Signal Samba services to apply the configuration above
      command: smbcontrol all reload-config
      register: smbcontrolreload_result
    - name: Prepare Samba domain-based main configuration file
      template:
        src: templates/smb-domain.j2
        dest: /etc/samba/smb.conf
        owner: root
        group: root
        mode: 0644
- name: Perform Samba cluster AD joining
  hosts: gluster_master
  remote_user: root
  tasks:
    - name: Wait for full AD DC availability
      # Note: we use the domain name as a shortcut to point to a domain controller
      # Note: we wait for DNS, RPC, LDAP and Kerberos (password change) services to be listening on a DC
      # TODO: we should wait for actual user/OU availability (needed by the join below)
      wait_for:
        host: "{{ hvp_adjoin_domain }}"
        port: "{{ item.port }}"
        state: started
        delay: "{{ item.delay }}"
        sleep: "{{ item.sleep }}"
        timeout: "{{ item.timeout }}"
      with_items:
        - { port: '53', delay: '60', sleep: '30', timeout: '300' }
        - { port: '135', delay: '0', sleep: '30', timeout: '300' }
        - { port: '389', delay: '0', sleep: '30', timeout: '300' }
        - { port: '464', delay: '0', sleep: '30', timeout: '300' }
    - name: Obtain Kerberos ticket
      shell: |
        set timeout 10
        spawn kinit {{ hvp_adjoin_username }}@{{ hvp_adjoin_realm }}
        match_max 100000
        expect -re -nocase "password for.*:.*$"
        send -- "{{ hvp_adjoin_password }}\r"
        expect eof
      args:
        executable: /usr/bin/expect
    - name: Join AD domain
      # TODO: joining with a custom OU fails similar to https://bugzilla.samba.org/show_bug.cgi?id=14007 - find out why and restore proper functionality - working around by preseeding computer object in DC
      #shell: 'net ads join -k osName="$(lsb_release -si)" osVer="$(lsb_release -sr)" createupn="host/{{ hvp_storage_name }}.{{ hvp_adjoin_domain }}@{{ hvp_adjoin_realm }}" createcomputer="File Servers"'
      shell: 'net ads join -k osName="$(lsb_release -si)" osVer="$(lsb_release -sr)" createupn="host/{{ hvp_storage_name }}.{{ hvp_adjoin_domain }}@{{ hvp_adjoin_realm }}"'
      register: join_result
    - name: Add further Kerberos SPNs
      # TODO: either move the keytab in a shared area or replicate it on all nodes
      # TODO: find a way to change computer password and keep keytab up-to-date - maybe schedule a cron job every 5 days on each node (shifted)
      # Note: the keytab mainly is needed by NFS-Ganesha for kerberized NFSv4 serving
      shell: "net ads keytab add_update_ads {{ item }}/{{ hvp_storage_name }}.{{ hvp_adjoin_domain }}@{{ hvp_adjoin_realm }} -k"
      register: addspn_result
      with_items:
        - cifs
        - nfs
    # TODO: add DNS A/PTR registration with: net ads dns register... - since PTR is unsupported, working around by preseeding DNS entries in DC
    - name: Remove Kerberos ticket
      command: kdestroy
      register: kdestroy_result
- name: Reload Samba configuration
  hosts: glusternodes
  remote_user: root
  tasks:
    - name: Signal Samba services to apply the configuration above
      command: smbcontrol all reload-config
      register: smbcontrolreload_result
- name: Perform Samba cluster privileges configuration
  hosts: gluster_master
  remote_user: root
  tasks:
    - name: Obtain Kerberos ticket
      shell: |
        set timeout 10
        spawn kinit {{ hvp_adjoin_username }}@{{ hvp_adjoin_realm }}
        match_max 100000
        expect -re -nocase "password for.*:.*$"
        send -- "{{ hvp_adjoin_password }}\r"
        expect eof
      args:
        executable: /usr/bin/expect
    - name: Grant disk administration privileges to Domain Admins
      # TODO: the following does not find the specified identity - find out why and correct
      shell: "net sam rights grant '{{ hvp_netbios_domainname }}\\Domain Admins' SeDiskOperatorPrivilege -k"
      register: diskprivilegegrant_result
      ignore_errors: yes
    - name: Remove Kerberos ticket
      command: kdestroy
      register: kdestroy_result
...
