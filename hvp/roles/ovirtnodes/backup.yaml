---
# Ansible playbook to setup a complete Bareos infrastructure (Director on Engine, nodes as storage daemons)
# TODO: install, configure and enable/start Bareos file daemons on every guest vm
- name: Install and configure Bareos on oVirt nodes
  hosts: ovirtnodes
  remote_user: root
  tasks:
    - name: Install Bareos-related packages on nodes
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - bareos-tools
        - bareos-client
        - bareos-filedaemon-glusterfs-plugin
        - bareos-storage
        - bareos-storage-glusterfs
    - name: Cleanup Bareos rpm leftovers on nodes
      command: "{{ item }}"
      register: cleanupnodesbareosinstleftovers_result
      with_items:
        - "find /etc/bareos -type f -name '*.rpmnew' -exec rename .rpmnew '' '{}' ';'"
        - "find /etc/bareos -type f -name '*.rpmsave' -exec rm -f '{}' ';'"
    - name: Create random passwords for file and storage daemons on nodes
      set_fact:
        bareos_fd_dir_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_fd_mon_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_sd_dir_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_sd_mon_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
    - name: Copy Gluster plugins configuration template files on oVirt nodes
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: yes
      with_items:
        - { src: "/etc/bareos/bareos-dir.d/storage/Gluster.conf.example", dest: "/etc/bareos/bareos-dir.d/storage/Gluster.conf" }
        - { src: "/etc/bareos/bareos-sd.d/device/GlusterStorage.conf.example", dest: "/etc/bareos/bareos-sd.d/device/GlusterStorage.conf" }
    - name: Set parameters in configuration files on oVirt nodes
      lineninfile:
        state: present
        path: "{{ item.path }}"
        backrefs: yes
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      register: setnodesbareosparameters_result
      with_items:
        - { path: "/etc/bareos/bareos-fd.d/client/myself.conf", regexp: "^([[:space:]]*)Name", line: "\Name = {{ ansible_hostname }}-fd" }
        - { path: "/etc/bareos/bareos-fd.d/director/bareos-dir.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_dir_password'] }}\"" }
        - { path: "/etc/bareos/bareos-fd.d/director/bareos-mon.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_mon_password'] }}\"" }
        - { path: "/etc/bareos/tray-monitor.d/client/FileDaemon-local.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_mon_password'] }}\"" }
        - { path: "/etc/bareos/bareos-sd.d/storage/bareos-sd.conf", regexp: "^([[:space:]]*)Name", line: "\Name = {{ ansible_hostname }}-sd" }
        - { path: "/etc/bareos/bareos-sd.d/director/bareos-dir.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_sd_dir_password'] }}\"" }
        - { path: "/etc/bareos/bareos-sd.d/director/bareos-mon.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_sd_mon_password'] }}\"" }
        - { path: "/etc/bareos/tray-monitor.d/storage/StorageDaemon-local.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_sd_mon_password'] }}\"" }
        - { path: "/etc/bareos/bareos-sd.d/device/GlusterStorage.conf", regexp: "^([[:space:]]*)Device Options", line: "\1Device Options = \"uri=gluster://{{ ansible_hostname }}.{{ hvp_gluster_domainname }}/{{ hvp_backup_volume_name }}/bareos\"" }
        - { path: "/etc/bareos/bareos-dir.d/storage/Gluster.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_sd_dir_password'] }}\"" }
        - { path: "/etc/bareos/bareos-dir.d/storage/Gluster.conf", regexp: "^([[:space:]]*)Address", line: "\1Address = \"{{ inventory_hostname }}\"" }
- name: Install, configure and start Bareos on Engine
  hosts: ovirtengine
  remote_user: root
  tasks:
  # TODO: prepare Bareos DB on Engine (use embedded PostgreSQL)
  # TODO: configure bareos-webui on Engine (use embedded Apache)
    - name: Install Bareos-related packages on Engine
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - bareos-tools
        - bareos-client
        - bareos-director
        - bareos-database-postgresql
        - bareos-database-tools
        - bareos-webui
    - name: Cleanup Bareos rpm leftovers on Engine
      command: "{{ item }}"
      register: cleanupenginebareosinstleftovers_result
      with_items:
        - "find /etc/bareos -type f -name '*.rpmnew' -exec rename .rpmnew '' '{}' ';'"
        - "find /etc/bareos -type f -name '*.rpmsave' -exec rm -f '{}' ';'"
    - name: Create random passwords for file and director daemons on Engine
      set_fact:
        bareos_fd_dir_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_fd_mon_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_dir_dir_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_dir_mon_password: "{{ lookup('password', '/dev/null length=45 chars=ascii_letters,digits encrypt=no') }}"
        bareos_dir_db_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters,digits encrypt=no') }}"
    - name: Set parameters in configuration files on Engine
      # TODO: find if/where to set the director monitoring password
      # TODO: configure filesets (add minimal data-only filesets for Linux and Windows to exclude OS and apps)
      # TODO: configure jobdefs (add templates for jobs below)
      # TODO: configure job (add one backup job for each client - add restore jobs)
      # TODO: customize recipients in messages (use monitoring address)
      # TODO: customize pools (change retention times)
      # TODO: customize profiles (add other roles besides operator)
      # TODO: customize schedules (add MonthlyCycle)
      # TODO: customize storages (add Gluster - manage failover/balancing somehow ; add external USB/eSATA media - manage detection)
      lineninfile:
        state: present
        path: "{{ item.path }}"
        backrefs: yes
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      register: setenginebareosparameters_result
      with_items:
        - { path: "/etc/bareos/bareos-fd.d/client/myself.conf", regexp: "^([[:space:]]*)Name", line: "\Name = bareos-fd" }
        - { path: "/etc/bareos/bareos-fd.d/director/bareos-dir.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_dir_password'] }}\"" }
        - { path: "/etc/bareos/bareos-fd.d/director/bareos-mon.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_mon_password'] }}\"" }
        - { path: "/etc/bareos/tray-monitor.d/client/FileDaemon-local.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_mon_password'] }}\"" }
        - { path: "/etc/bareos/bareos-dir.d/client/bareos-fd.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_fd_dir_password'] }}\"" }
        - { path: "/etc/bareos/bareos-dir.d/director/bareos-dir.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_dir_dir_password'] }}\"" }
        - { path: "/etc/bareos/bareos-dir.d/console/bareos-mon.conf", regexp: "^([[:space:]]*)Password", line: "\1Password = \"{{ hostvars[inventory_hostname]['bareos_dir_mon_password'] }}\"" }
        - { path: "/etc/bareos/bareos-dir.d/catalog/MyCatalog.conf", regexp: "^([[:space:]]*)dbdriver", line: "\1dbdriver = \"postgresql\"" }
        - { path: "/etc/bareos/bareos-dir.d/catalog/MyCatalog.conf", regexp: "^([[:space:]]*)dbpassword", line: "\1dbpassword = \"{{ hostvars[inventory_hostname]['bareos_dir_db_password'] }}\"" }
    - name: Enable and start Bareos-related services on Engine
      systemd:
        name: "{{ item }}"
        enabled: True
        state: started
        no_block: no
      with_items:
        - bareos-fd
        - bareos-dir
- name: Start Bareos on oVirt nodes
  hosts: glusternodes
  remote_user: root
  tasks:
    - name: Enable and start Bareos-related services on oVirt nodes
      systemd:
        name: "{{ item }}"
        enabled: True
        state: started
        no_block: no
      with_items:
        - bareos-fd
        - bareos-sd
...
