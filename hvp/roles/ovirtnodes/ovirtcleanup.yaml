---
# Ansible playbook to completely revert oVirt Hosted Engine setup (cleanup)
# Note: the aim is to undo any effect of running the ovirtnodes.yaml playbook
# Note: this is to be used typically after an aborted/failed Self hosted Engine Setup and before retrying
# Note: no actions/cleanup will be performed on further nodes beyond the master one (that which performs the Engine initial setup)
- name: Generate SSH key if not present
  hosts: localhost
  tasks:
    - include_tasks: ../common/tasks/createkeys.yaml
- name: Inspect oVirt nodes
  hosts: ovirtnodes
  remote_user: root
  tasks:
    - include_tasks: ../common/tasks/setupkeys.yaml
- name: Perform oVirt Hosted Engine cleanup on master node
  hosts: ovirt_master
  remote_user: root
  tasks:
    - name: Get common vars
      include_vars:
        file: ../common/vars/hvp.yaml
    - name: Execute the oVirt Hosted Engine cleanup helper script
      vars:
        ansible_ssh_pipelining: no
      command: ovirt-hosted-engine-cleanup -q
      register: enginecleanup_result
    - name: Mount the Gluster volume intended for Self Hosted Engine
      command: "mount -t glusterfs localhost:/{{ hvp_enginedomain_volume_name }} /mnt"
      args:
        warn: no
      register: enginevolumemount_result
    - name: Find entries inside the Gluster volume intended for Self Hosted Engine
      find:
        paths: "/mnt"
        hidden: true
        recurse: true
        file_type: any
      register: enginevolumeentries_result
    - name: Remove all entries inside the Gluster volume intended for Self Hosted Engine
      file:
        path: "{{ item.path }}"
        state: absent
        # Note: .trashcan and .trashcan/internal_op cannot be deleted, so we must ignore errors
      ignore_errors: yes
      with_items: "{{ enginevolumeentries_result }}"
    - name: Unmount the Gluster volume intended for Self Hosted Engine
      command: "umount -l /mnt"
      register: enginevolumeumount_result
      warn: false
...
